

/*
 * Complete the 'sortedInsert' function below.
 *
 * The function is expected to return an INTEGER_DOUBLY_LINKED_LIST.
 * The function accepts following parameters:
 *  1. INTEGER_DOUBLY_LINKED_LIST llist
 *  2. INTEGER data
 */

/*
 * For your reference:
 *
 * DoublyLinkedListNode {
 *     int data;
 *     DoublyLinkedListNode* next;
 *     DoublyLinkedListNode* prev;
 * };
 *
 */
DoublyLinkedListNode* sortedInsert(DoublyLinkedListNode* head, int data) {
    if (!head) return head; // To abort
    // OR you can set a new node.
    // if (!head) return new DoublyLinkedListNode(data);
    DoublyLinkedListNode* node = new DoublyLinkedListNode(data);
    if (head->data >= node->data) {
        head->prev = node;
        node->next = head;
        return node;
    }
    DoublyLinkedListNode* temp = head;
    while (temp != NULL) {
        if (temp->data >= node->data) {
            temp->prev->next = node;
            node->prev = temp->prev;
            temp->prev = node;
            node->next = temp;
            break;
        }
        else if (temp->next == NULL) {
            temp->next = node;
            node->prev = temp;
            break;
        }
        temp = temp->next;
    }

    return head;
}


