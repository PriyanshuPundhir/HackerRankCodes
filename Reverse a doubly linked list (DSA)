

/*
 * Complete the 'reverse' function below.
 *
 * The function is expected to return an INTEGER_DOUBLY_LINKED_LIST.
 * The function accepts INTEGER_DOUBLY_LINKED_LIST llist as parameter.
 */

/*
 * For your reference:
 *
 * DoublyLinkedListNode {
 *     int data;
 *     DoublyLinkedListNode* next;
 *     DoublyLinkedListNode* prev;
 * };
 *
 */

DoublyLinkedListNode* reverse(DoublyLinkedListNode* head) {
    // If the list has 0 or 1 node.
    if (!head || !head->next) return head;
    // Handle the head
    DoublyLinkedListNode* current = head->next;
    head->next = head->prev;
    head->prev = current;
    // Reverse the nodes
    while (current->next) {
        DoublyLinkedListNode* temp_next = current->next;
        current->next = current->prev;
        current->prev = temp_next;
        current = temp_next;
    }
    // Handle the tail
    current->next = current->prev;
    current->prev = NULL;
    return current;
}

